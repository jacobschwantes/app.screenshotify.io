@tailwind base;
@tailwind components;
@tailwind utilities;

.screenshot {
  transform: translate3d(0px, -16px, 0px) rotateX(60deg) rotateZ(30deg);
  transform-style: preserve-3d;
}
.template2 {
  transform: perspective(20rem) rotateX(5deg) rotateY(-15deg) rotateZ(10deg);
}
@layer utilities {

.template4 {
  transform: perspective(var(--perspective-var)) rotateX(calc(var(--rotateX-var) * -1) ) rotateY(calc(var(--rotateY-var) * -1)) rotateZ(calc(var(--rotateZ-var) * -1)) scale(var(--zoom-var));
}  .template3 {
  transform: perspective(var(--perspective-var)) rotateX(var(--rotateX-var)) rotateY(var(--rotateY-var)) rotateZ(var(--rotateZ-var)) scale(var(--zoom-var));
}

.container {
  gap: var(--grid-gap);
transform: rotateX(var(--container-rotate-x)) rotateY(var(--container-rotate-y)) rotateZ(var(--container-rotate-z)) scale(var(--container-zoom));
}

.template5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
    margin-right: calc(var(--gap-x) * var(--tw-space-x-reverse));
    margin-left: calc(var(--gap-x) * calc(1 - var(--tw-space-x-reverse)));
}
.template6 div:nth-child(odd) { 
  transform-style: preserve-3d;
  transform: translate3d(var(--gap-x), var(--gap-y), var(--gap-z)) perspective(var(--perspective-var)) rotateX(var(--rotateX-var)) rotateY(var(--rotateY-var)) rotateZ(var(--rotateZ-var));
  
}
.template6 div:nth-child(even) {
  transform-style: preserve-3d;
  transform:  rotateX(calc(var(--rotateX-var) * -1) ) rotateY(calc(var(--rotateY-var) * -1)) rotateZ(calc(var(--rotateZ-var) * -1));
  
}
.template7 div:nth-child(odd) {
  transform:
  rotateX(var(--rotateX-var))
  rotateZ(var(--rotateZ-var))
  scale(var(--zoom-var))
   translate3d(calc(-1 * var(--gap-x)), calc(-1 * var(--gap-y)), calc(-1 * var(--gap-z)));
  transform-style: preserve-3d;
  box-shadow:
    1px 1px 0 1px #f9f9fb,
    -1px 0 28px 0 rgba(34, 33, 81, 0.01),
     calc(var(--gap-z) * -5.4) calc(var(--gap-z) * -5.4) 28px calc(var(--gap-z) * -.625) rgba(34, 33, 81, calc(.5 - ( (var(--blur) - 1) * -0.25 )));
}
.template7 div:nth-child(even) {
  transform:
  rotateX(var(--rotateX-var))
  rotateZ(var(--rotateZ-var))
  scale(var(--zoom-var))
   translate3d(calc(-1 * var(--gap-x)), calc(-1 * var(--gap-y)), calc(-1 * var(--gap-z)));
  transform-style: preserve-3d;
  box-shadow:
    1px 1px 0 1px #f9f9fb,
    -1px 0 28px 0 rgba(34, 33, 81, 0.01),
     calc(var(--gap-z) * -5.4) calc(var(--gap-z) * -5.4) 28px calc(var(--gap-z) * -.625) rgba(34, 33, 81, calc(.5 - ( (var(--blur) - 1) * -0.25 )));
}

.grid-effect-dark{
  background-size:40px 40px;
  background-image:linear-gradient(90deg,	hsl(240, 6%, 10%) 1px,transparent 0),linear-gradient(180deg,	hsl(240, 6%, 10%) 1px,transparent 0)
}
.grid-effect-light{
  background-size:40px 40px;
  background-image:linear-gradient(90deg,hsla(0,0%,95%,.55) 1px,transparent 0),linear-gradient(180deg,hsla(0,0%,95%,.55) 1px,transparent 0)
}

.shadow-custom {
    box-shadow: 24px 16px 64px 0 rgba(0, 0, 0, 0.08);
    border: 1px solid;
  border-color: rgb(213, 220, 226) rgb(213, 220, 226) rgb(184, 194, 204);
}

.slider {
  -webkit-appearance: none;  /* Override default CSS styles */
  appearance: none;
  outline: none; /* Remove outline */
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
.slider::-webkit-slider-thumb {
  -webkit-appearance: none; /* Override default look */
  appearance: none;
  width: 15px; /* Set a specific slider handle width */
  height: 15px; /* Slider handle height */
  border-radius: 100%;
  background: lightgrey; /* Green background */
  cursor: pointer; /* Cursor on hover */
}

.slider::-moz-range-thumb {
  background: #04AA6D; /* Green background */
  cursor: pointer; /* Cursor on hover */
}
}

.toastProgressBlue {
  background: #1d4ed8 !important;
}

.Tooltip {
  background: #222;
  color: white;
  pointer-events: none;
  border-radius: 6px;
  padding: 4px 6px;
  font-size: 14px;
}

